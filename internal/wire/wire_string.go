// Code generated by "stringer -type=Code,ActionCode,ModifyActCode -output=wire_string.go"; DO NOT EDIT.

package wire

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CodeOptNeg-79]
	_ = x[CodeMacro-68]
	_ = x[CodeConn-67]
	_ = x[CodeQuit-81]
	_ = x[CodeHelo-72]
	_ = x[CodeMail-77]
	_ = x[CodeRcpt-82]
	_ = x[CodeHeader-76]
	_ = x[CodeEOH-78]
	_ = x[CodeBody-66]
	_ = x[CodeEOB-69]
	_ = x[CodeAbort-65]
	_ = x[CodeData-84]
	_ = x[CodeQuitNewConn-75]
	_ = x[CodeUnknown-85]
}

const (
	_Code_name_0 = "CodeAbortCodeBodyCodeConnCodeMacroCodeEOB"
	_Code_name_1 = "CodeHelo"
	_Code_name_2 = "CodeQuitNewConnCodeHeaderCodeMailCodeEOHCodeOptNeg"
	_Code_name_3 = "CodeQuitCodeRcpt"
	_Code_name_4 = "CodeDataCodeUnknown"
)

var (
	_Code_index_0 = [...]uint8{0, 9, 17, 25, 34, 41}
	_Code_index_2 = [...]uint8{0, 15, 25, 33, 40, 50}
	_Code_index_3 = [...]uint8{0, 8, 16}
	_Code_index_4 = [...]uint8{0, 8, 19}
)

func (i Code) String() string {
	switch {
	case 65 <= i && i <= 69:
		i -= 65
		return _Code_name_0[_Code_index_0[i]:_Code_index_0[i+1]]
	case i == 72:
		return _Code_name_1
	case 75 <= i && i <= 79:
		i -= 75
		return _Code_name_2[_Code_index_2[i]:_Code_index_2[i+1]]
	case 81 <= i && i <= 82:
		i -= 81
		return _Code_name_3[_Code_index_3[i]:_Code_index_3[i+1]]
	case 84 <= i && i <= 85:
		i -= 84
		return _Code_name_4[_Code_index_4[i]:_Code_index_4[i+1]]
	default:
		return "Code(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ActAccept-97]
	_ = x[ActContinue-99]
	_ = x[ActDiscard-100]
	_ = x[ActReject-114]
	_ = x[ActTempFail-116]
	_ = x[ActReplyCode-121]
	_ = x[ActSkip-115]
	_ = x[ActProgress-112]
}

const (
	_ActionCode_name_0 = "ActAccept"
	_ActionCode_name_1 = "ActContinueActDiscard"
	_ActionCode_name_2 = "ActProgress"
	_ActionCode_name_3 = "ActRejectActSkipActTempFail"
	_ActionCode_name_4 = "ActReplyCode"
)

var (
	_ActionCode_index_1 = [...]uint8{0, 11, 21}
	_ActionCode_index_3 = [...]uint8{0, 9, 16, 27}
)

func (i ActionCode) String() string {
	switch {
	case i == 97:
		return _ActionCode_name_0
	case 99 <= i && i <= 100:
		i -= 99
		return _ActionCode_name_1[_ActionCode_index_1[i]:_ActionCode_index_1[i+1]]
	case i == 112:
		return _ActionCode_name_2
	case 114 <= i && i <= 116:
		i -= 114
		return _ActionCode_name_3[_ActionCode_index_3[i]:_ActionCode_index_3[i+1]]
	case i == 121:
		return _ActionCode_name_4
	default:
		return "ActionCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ActAddRcpt-43]
	_ = x[ActDelRcpt-45]
	_ = x[ActReplBody-98]
	_ = x[ActAddHeader-104]
	_ = x[ActChangeHeader-109]
	_ = x[ActInsertHeader-105]
	_ = x[ActQuarantine-113]
	_ = x[ActChangeFrom-101]
	_ = x[ActAddRcptPar-50]
}

const (
	_ModifyActCode_name_0 = "ActAddRcpt"
	_ModifyActCode_name_1 = "ActDelRcpt"
	_ModifyActCode_name_2 = "ActAddRcptPar"
	_ModifyActCode_name_3 = "ActReplBody"
	_ModifyActCode_name_4 = "ActChangeFrom"
	_ModifyActCode_name_5 = "ActAddHeaderActInsertHeader"
	_ModifyActCode_name_6 = "ActChangeHeader"
	_ModifyActCode_name_7 = "ActQuarantine"
)

var (
	_ModifyActCode_index_5 = [...]uint8{0, 12, 27}
)

func (i ModifyActCode) String() string {
	switch {
	case i == 43:
		return _ModifyActCode_name_0
	case i == 45:
		return _ModifyActCode_name_1
	case i == 50:
		return _ModifyActCode_name_2
	case i == 98:
		return _ModifyActCode_name_3
	case i == 101:
		return _ModifyActCode_name_4
	case 104 <= i && i <= 105:
		i -= 104
		return _ModifyActCode_name_5[_ModifyActCode_index_5[i]:_ModifyActCode_index_5[i+1]]
	case i == 109:
		return _ModifyActCode_name_6
	case i == 113:
		return _ModifyActCode_name_7
	default:
		return "ModifyActCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
